################################################################
# Build jpl.jar
################################################################

.SUFFIXES: .java .class

JAVAC=@JAVAC@
JAVACFLAGS=@JAVACFLAGS@
JAR=@JAR@
JUNIT=@JUNIT@
JAVADOC=@JAVADOC@
JAVADOCFLAGS=@JAVADOCFLAGS@
JPLJAR=../../jpl.jar
TSTJAR=../../jpltest.jar
JPLDOC=../../docs/java_api/javadoc

CLS=	org/jpl7/Atom.java \
	org/jpl7/Compound.java \
	org/jpl7/Float.java \
	org/jpl7/Integer.java \
	org/jpl7/JRef.java \
	org/jpl7/JPLException.java \
	org/jpl7/JPL.java \
	org/jpl7/PrologException.java \
	org/jpl7/Query.java \
	org/jpl7/Term.java \
	org/jpl7/Util.java \
	org/jpl7/Variable.java \
	org/jpl7/Version.java

FLI=	org/jpl7/fli/atom_t.java \
	org/jpl7/fli/BooleanHolder.java \
	org/jpl7/fli/DoubleHolder.java \
	org/jpl7/fli/engine_t.java \
	org/jpl7/fli/fid_t.java \
	org/jpl7/fli/functor_t.java \
	org/jpl7/fli/IntHolder.java \
	org/jpl7/fli/Int64Holder.java \
	org/jpl7/fli/LongHolder.java \
	org/jpl7/fli/module_t.java \
	org/jpl7/fli/ObjectHolder.java \
	org/jpl7/fli/PointerHolder.java \
	org/jpl7/fli/predicate_t.java \
	org/jpl7/fli/Prolog.java \
	org/jpl7/fli/qid_t.java \
	org/jpl7/fli/StringHolder.java \
	org/jpl7/fli/term_t.java

TEST=	org/jpl7/test/Family.java \
	org/jpl7/test/FetchBigTree.java \
	org/jpl7/test/FetchLongList.java \
	org/jpl7/test/Ga2.java \
	org/jpl7/test/Ga.java \
	org/jpl7/test/Garbo.java \
	org/jpl7/test/Masstest.java \
	org/jpl7/test/MaxObjects.java \
	org/jpl7/test/ShadowA.java \
	org/jpl7/test/ShadowB.java \
	org/jpl7/test/SyntaxError.java \
	org/jpl7/test/Test.java \
	org/jpl7/test/TestJUnit.java \
	org/jpl7/test/TestOLD.java

JPLJAVA=$(CLS) $(FLI)
TSTJAVA=$(TEST)

all:	$(JPLJAR) $(TSTJAR) $(JPLDOC)

jpl_jar:	$(JPLJAR)
test_jar:	$(TSTJAR)
jpl_doc:	$(JPLDOC)

.class-senitel:	$(JPLJAVA)
		"$(JAVAC)" $(JAVACFLAGS) $(JPLJAVA)
		touch $@

$(JPLJAR):	.class-senitel
		"$(JAR)" cf $(JPLJAR) $(foreach basename,$(JPLJAVA:.java=),$(basename).class $(subst $$,\$$,$(wildcard $(basename)$$*.class)))

ifneq ($(JUNIT),)
$(TSTJAR):	$(JPLJAR) $(TSTJAVA)
		"$(JAVAC)" $(JAVACFLAGS) -classpath $(JPLJAR):$(JUNIT) $(TSTJAVA)
		"$(JAR)" cf $(TSTJAR) $(TSTJAVA:.java=.class)
else
$(TSTJAR)::
endif

$(JPLDOC):	$(JPLJAVA)
		"$(JAVADOC)" $(JAVADOCFLAGS) -public -d $(JPLDOC) $(JPLJAVA)

clean::
	rm -f .class-senitel *~ org/jpl7/*.class org/jpl7/test/*.class org/jpl7/fli/*.class

distclean: clean
	rm -f $(JPLJAR) $(TSTJAR) Makefile
	rm -rf $(JPLDOC)

